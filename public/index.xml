<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <link>//localhost:1313/</link>
    <description>Recent content on </description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 15 Dec 2024 12:00:00 +0000</lastBuildDate>
    <atom:link href="//localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>EncoDecept [EN] | HTB University CTF 2024</title>
      <link>//localhost:1313/writeups/encodecept-htb-university-2024/</link>
      <pubDate>Sun, 15 Dec 2024 12:00:00 +0000</pubDate>
      <guid>//localhost:1313/writeups/encodecept-htb-university-2024/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;This challenge is one of the 4 challenges in the WEB category published at the University CTF 2024.&#xA;It is rated medium despite having the lowest resolution in the category. It is therefore considered the toughest web challenge of this edition.&lt;/p&gt;&#xA;&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;&#xA;&lt;p&gt;The Frontier Board’s iron grip on the galaxy rests on one secret: the location of the legendary Starry Spur, hidden deep within their Intergalactic Contract System (ICMS. With rebellion brewing, Jack Colt is humanity’s last hope. Tasked by the resistance, he must breach the impenetrable system, outwit its defenses, and retrieve the contract that could ignite a revolution. The galaxy’s freedom hangs by a thread—can Jack rise to the challenge?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Spip Preauth RCE 2024, my First CVE !</title>
      <link>//localhost:1313/researchs/spip-preauth-rce-2024-big-upload/</link>
      <pubDate>Wed, 04 Sep 2024 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/researchs/spip-preauth-rce-2024-big-upload/</guid>
      <description>&lt;h2 id=&#34;some-context&#34;&gt;Some Context&lt;/h2&gt;&#xA;&lt;p&gt;A month ago, &lt;a href=&#34;https://x.com/TheLaluka/&#34; target=&#34;_blank&#34;&gt;TheLaluka&lt;/a&gt; &lt;a href=&#34;https://x.com/TheLaluka/status/1821821709499961817&#34; target=&#34;_blank&#34;&gt;suggested&lt;/a&gt; finding his preauth RCE in SPIP as a challenge.&#xA;The challenge was very nice and I had nothing to do, so I decided to take a look at this CMS.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;./img/tweet1.png&#34; alt=&#34;tweet1&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;He gave us a hint to narrow down the attack surface, as the project is substantial.&#xA;So, with &lt;a href=&#34;https://x.com/_Worty&#34; target=&#34;_blank&#34;&gt;Worty&lt;/a&gt;, we found the vulnerability and &lt;a href=&#34;https://x.com/TheLaluka/status/1824357306433253480&#34; target=&#34;_blank&#34;&gt;won the challenge&lt;/a&gt;!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pong [EN]| FCSC 2024</title>
      <link>//localhost:1313/writeups/pong-fcsc2024-en/</link>
      <pubDate>Fri, 12 Apr 2024 12:00:00 +0000</pubDate>
      <guid>//localhost:1313/writeups/pong-fcsc2024-en/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Ping.&#xD;&#xA;&#xD;&#xA;Note : l&amp;#39;infra n&amp;#39;a pas accès à internet.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The sources for this challenge are provided:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── docker-compose.yml&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;└── src&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ├── backend&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    │   ├── Dockerfile&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    │   └── src&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    │       ├── app.py&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    │       ├── public&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    │       │   ├── index.html&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    │       │   └── js&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    │       │       └── main.js&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    │       └── requirements.txt&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ├── dns&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    │   ├── Dockerfile&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    │   └── src&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    │       ├── dns_server.py&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    │       └── requirements.txt&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ├── flag&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    │   ├── Dockerfile&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    │   └── src&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    │       ├── app.js&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    │       └── package.json&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    └── frontend&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ├── Dockerfile&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        └── src&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            ├── curl-7.71.0.tar.gz&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            └── index.php&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Twisty Python [EN]| FCSC 2024</title>
      <link>//localhost:1313/writeups/twisty-python-fcsc2024-en/</link>
      <pubDate>Fri, 12 Apr 2024 12:00:00 +0000</pubDate>
      <guid>//localhost:1313/writeups/twisty-python-fcsc2024-en/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Venez découvrir la dernière sensation Internet qui promet de battre tous les records ! Dans ce jeu révolutionnaire, vous guiderez un serpent en pleine croissance dans sa quête de pommes. C&amp;#39;est simple mais addictif : dévorez autant de pommes que possible pour étirer votre serpent à des longueurs étonnantes. Êtes-vous prêt à établir de nouveaux records et à devenir une légende dans cette aventure tortueuse ?&#xA;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>ChatterBox | RealWorld CTF 6th</title>
      <link>//localhost:1313/writeups/chatterbox-realworld-ctf-2024/</link>
      <pubDate>Sun, 28 Jan 2024 12:00:00 +0000</pubDate>
      <guid>//localhost:1313/writeups/chatterbox-realworld-ctf-2024/</guid>
      <description>&lt;h2 id=&#34;fichiers&#34;&gt;Fichiers:&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;./files/ChatterBox_source.zip&#34;&gt;ChatterBox_source.zip&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;description&#34;&gt;Description:&lt;/h2&gt;&#xA;&lt;p&gt;I wanna inject sth in my Box what should i do？&#xA;&lt;code&gt;nc &amp;lt;ip&amp;gt; 9999&lt;/code&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;solution-détaillée&#34;&gt;Solution détaillée:&lt;/h2&gt;&#xA;&lt;p&gt;Voici les fichiers fournis par l&amp;rsquo;auteur:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ tree .&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── ChatterBox-0.0.1-SNAPSHOT.jar&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── docker-compose.yml&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── Dockerfile&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── flag&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── init.sql&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── readflag&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;└── start.sh&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;En regardant rapidement le Dockerfile, on comprend que le flag est copié dans &lt;code&gt;/flag&lt;/code&gt; et que le binaire &lt;code&gt;/readflag&lt;/code&gt; va nous permettre de le lire.&#xA;Un serveur web est unfichier &lt;code&gt;jar&lt;/code&gt; et nous allons devoir l&amp;rsquo;exploiter pour avoir une execution de commande sur le serveur.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Introduction aux réseaux euclidiens</title>
      <link>//localhost:1313/other/lattice-introduction/</link>
      <pubDate>Sun, 30 Jul 2023 09:00:00 +0000</pubDate>
      <guid>//localhost:1313/other/lattice-introduction/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;Les &lt;strong&gt;réseaux euclidiens&lt;/strong&gt; &lt;em&gt;(Lattice en anglais)&lt;/em&gt; jouent un rôle &lt;strong&gt;essentiel&lt;/strong&gt; en cryptographie moderne.&lt;br&gt;&#xA;Dans cet article, nous allons explorer l&amp;rsquo;historique des réseaux euclidiens en cryptographie, leur utilisation dans les systèmes de chiffrement, ainsi que les problèmes mathématiques auxquels ils sont confrontés.&lt;br&gt;&#xA;Nous nous concentrerons en particulier sur le &lt;code&gt;Closest Vector Problem&lt;/code&gt; &lt;em&gt;(CVP)&lt;/em&gt; et le &lt;code&gt;Small Vector Problem&lt;/code&gt; &lt;em&gt;(SVP)&lt;/em&gt;, qui sont des problèmes centraux dans ce domaine.&lt;/p&gt;&#xA;&lt;h2 id=&#34;petit-point-historique&#34;&gt;Petit point Historique&lt;/h2&gt;&#xA;&lt;p&gt;L&amp;rsquo;étude des réseaux euclidiens en mathématiques remonte au &lt;em&gt;XVIIIe&lt;/em&gt; siècle, lorsque Leonhard Euler a commencé à examiner les structures géométriques des points dans l&amp;rsquo;espace.&lt;br&gt;&#xA;Cependant, ce n&amp;rsquo;est qu&amp;rsquo;au &lt;em&gt;XXe&lt;/em&gt; siècle que le concept de réseaux euclidiens a été appliqué à la cryptographie.&lt;br&gt;&#xA;Dans les années &lt;em&gt;1990&lt;/em&gt;, &lt;strong&gt;Ajtai&lt;/strong&gt;, &lt;strong&gt;Dwork&lt;/strong&gt;, &lt;strong&gt;Regev&lt;/strong&gt; et autres ont introduit la notion de réseaux euclidiens comme base de problèmes difficiles en cryptographie, ouvrant la voie à de nouvelles constructions cryptographiques.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Writeup 5Ways2XSS - DOJO #23 | YesWeHack</title>
      <link>//localhost:1313/writeups/yeswehack_dojo_23/</link>
      <pubDate>Mon, 15 May 2023 12:00:00 +0000</pubDate>
      <guid>//localhost:1313/writeups/yeswehack_dojo_23/</guid>
      <description>&lt;h2 id=&#34;hint&#34;&gt;/Hint&lt;/h2&gt;&#xA;&lt;p&gt;Concentrez-vous sur une section XSS à la fois pour éviter les maux de tête ! 😉&lt;br&gt;&#xA;Aussi&amp;hellip; les barres obliques &lt;strong&gt;(/)&lt;/strong&gt; sont votre meilleur ami, qui a même besoin d&amp;rsquo;espaces de nos jours&amp;hellip; ?&lt;/p&gt;&#xA;&lt;h2 id=&#34;-rules&#34;&gt;/ Rules&lt;/h2&gt;&#xA;&lt;p&gt;Une solution valable doit répondre à toutes ces exigences :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;(1) XSS classique par l&amp;rsquo;utilisation de balises HTML&lt;/li&gt;&#xA;&lt;li&gt;(2) XSS en restant à l&amp;rsquo;intérieur des balises originales &lt;em&gt;&amp;lt;script&amp;gt;&lt;/em&gt;.&lt;/li&gt;&#xA;&lt;li&gt;(3) XSS à l&amp;rsquo;intérieur de la valeur &amp;lsquo;src&amp;rsquo; &lt;em&gt;(Ne pas sortir des guillemets)&lt;/em&gt;&lt;/li&gt;&#xA;&lt;li&gt;(4) XSS à l&amp;rsquo;intérieur de la balise &amp;lsquo;&lt;!-- raw HTML omitted --&gt;&amp;rsquo; &lt;em&gt;(Ne créez pas une nouvelle balise HTML ou ne brisez pas la balise originale)&lt;/em&gt;&lt;/li&gt;&#xA;&lt;li&gt;(5)  Exécuter une DOM XSS en restant à l&amp;rsquo;intérieur de la valeur d&amp;rsquo;entrée &lt;em&gt;(Ne pas sortir des guillemets)&lt;/em&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;goal&#34;&gt;/GOAL&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;Suivre les règles et écrire une charge utile XSS unique qui s&amp;rsquo;exécute sur les cinq entrées différentes ($xss)&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Like a Whispering Entropy | PWNME CTF 2023</title>
      <link>//localhost:1313/writeups/like_a_whispering_entropy-pwnme-2023/</link>
      <pubDate>Sun, 07 May 2023 12:00:00 +0000</pubDate>
      <guid>//localhost:1313/writeups/like_a_whispering_entropy-pwnme-2023/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h1 id=&#34;introduction-du-challenge&#34;&gt;Introduction du challenge:&lt;/h1&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;I don&amp;#39;t trust those who wrote crypto implementations, so I had to write my own ...&#xD;&#xA;I created everything from scratch so I know it is safe ! No one backdoored my Diffie-Hellman implementation !&#xD;&#xA;&#xD;&#xA;Btw, I gave you an output of a connection to my service, but anyway you won&amp;#39;t be able to get back the secret message&#xA;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Another Blog | PWNME CTF 2023</title>
      <link>//localhost:1313/writeups/another_blog-pwnme-2023/</link>
      <pubDate>Sat, 06 May 2023 12:00:00 +0000</pubDate>
      <guid>//localhost:1313/writeups/another_blog-pwnme-2023/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h1 id=&#34;introduction-du-challenge&#34;&gt;Introduction du challenge:&lt;/h1&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Objective: Read the flag, situated on the server in /app/flag.txt&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;tree-viewer&#34;&gt;Tree Viewer&lt;/h1&gt;&#xA;&lt;p&gt;Les sources de ce challenge sont fournies :&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── app.py&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── articles.py&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── config.yaml&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── docker-compose.yml&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── Dockerfile&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── flag.txt&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── input.css&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── package.json&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── package-lock.json&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── requirements.txt&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── static&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   └── style.css&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── tailwind.config.js&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── templates&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   ├── article.html&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   ├── articles.html&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   ├── banner.html&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   ├── head.html&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   ├── home.html&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   ├── login.html&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   └── register.html&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;└── users.py&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Beat me! | PWNME CTF 2023</title>
      <link>//localhost:1313/writeups/beat_me-pwnme-2023/</link>
      <pubDate>Sat, 06 May 2023 12:00:00 +0000</pubDate>
      <guid>//localhost:1313/writeups/beat_me-pwnme-2023/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h1 id=&#34;introduction-du-challenge-&#34;&gt;Introduction du challenge :&lt;/h1&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;A pro player challenge you to a new game. He spent a huge amount of time on it, and did an extremely good score.&#xD;&#xA;Your goal is to beat him.. by any way&#xD;&#xA;If the game doesn&amp;#39;t start, try an other nagivator&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;tree-viewer&#34;&gt;Tree Viewer&lt;/h1&gt;&#xA;&lt;p&gt;Les sources de ce challenge ne sont pas fournies.&#xA;A première vue, ce challenge est un jeu ou nous devons battre l&amp;rsquo;utilisateur &lt;strong&gt;Eteck&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Nestapp | PWNME CTF 2023</title>
      <link>//localhost:1313/writeups/nestapp-pwnme-2023/</link>
      <pubDate>Sat, 06 May 2023 12:00:00 +0000</pubDate>
      <guid>//localhost:1313/writeups/nestapp-pwnme-2023/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h1 id=&#34;introduction-du-challenge-&#34;&gt;Introduction du challenge :&lt;/h1&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;In order to create an API with an auth system, a developer used NestJS. He tried to follows the doc and all the good practices on the official NestJS website, and used libraries that seems safe.&#xD;&#xA;&#xD;&#xA;But is it enough ? Your goal is to read the flag, located in /home/flag.txt&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;tree-viewer&#34;&gt;Tree Viewer&lt;/h1&gt;&#xA;&lt;p&gt;Les sources de ce challenge sont fournies :&lt;/p&gt;</description>
    </item>
    <item>
      <title>QRDoor Code | PWNME CTF 2023</title>
      <link>//localhost:1313/writeups/qrdoor_code-pwnme-2023/</link>
      <pubDate>Sat, 06 May 2023 12:00:00 +0000</pubDate>
      <guid>//localhost:1313/writeups/qrdoor_code-pwnme-2023/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h1 id=&#34;introduction-du-challenge&#34;&gt;Introduction du challenge:&lt;/h1&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;A company needed a website, to generate QR Code. They asked for a freelance to do this job&#xD;&#xA;Since the website is up, they&amp;#39;ve noticed weird behaviour on their server&#xD;&#xA;They need you to audit their code and help them to resolve their problem&#xD;&#xA;Flag is situed in /app/flag.txt&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;tree-viewer&#34;&gt;Tree Viewer&lt;/h1&gt;&#xA;&lt;p&gt;Les sources de ce challenge sont fournies :&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tree Viewer | PWNME CTF 2023</title>
      <link>//localhost:1313/writeups/tree_viewer-pwnme-2023/</link>
      <pubDate>Sat, 06 May 2023 12:00:00 +0000</pubDate>
      <guid>//localhost:1313/writeups/tree_viewer-pwnme-2023/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h1 id=&#34;introduction-du-challenge&#34;&gt;Introduction du challenge:&lt;/h1&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Here, you can check the content of any directories present on the server.&#xD;&#xA;Find a way to abuse this functionality, and read the content of /home/flag.txt&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;tree-viewer&#34;&gt;Tree Viewer&lt;/h1&gt;&#xA;&lt;p&gt;Les sources de ce challenges ne sont pas fournies mais nous avons accès en &lt;em&gt;/?source&lt;/em&gt; au code php du backend:&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;http://13.37.17.31:51695/?source&lt;/em&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;?php&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;$parsed = isset($_POST[&amp;#39;input&amp;#39;]) ? $_POST[&amp;#39;input&amp;#39;] : &amp;#34;/home/&amp;#34;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;preg_match_all(&amp;#39;/[;|]/m&amp;#39;, $parsed, $illegals, PREG_SET_ORDER, 0);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;if($illegals){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;    echo &amp;#34;Illegals chars found&amp;#34;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;    $parsed = &amp;#34;/home/&amp;#34;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;if(isset($_GET[&amp;#39;source&amp;#39;])){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;    highlight_file(__FILE__);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;?&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lang&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;en&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;charset&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;http-equiv&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;X-UA-Compatible&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;IE=edge&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;viewport&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;Tree Viewer&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;head&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;href&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/?source&amp;#34;&lt;/span&gt;&amp;gt;Source code&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;a&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;hr&lt;/span&gt;/&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;form&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;action&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;method&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;post&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;label&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;input&amp;#34;&lt;/span&gt;&amp;gt;Directory to check&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;label&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;text&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;placeholder&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Directory to see&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;input&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;input&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;?= $parsed ?&amp;gt;&amp;#34;&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;form&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;h3&lt;/span&gt;&amp;gt;Content of &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;?= $parsed ?&amp;gt;&lt;/span&gt;: &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;?= shell_exec(&amp;#39;ls &amp;#39;.$parsed); ?&amp;gt;&lt;/span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;h3&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Peculiar Caterpillar | FCSC 2023</title>
      <link>//localhost:1313/writeups/peculiar-caterpillar/</link>
      <pubDate>Fri, 28 Apr 2023 12:00:00 +0000</pubDate>
      <guid>//localhost:1313/writeups/peculiar-caterpillar/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Alors qu&amp;#39;elle se promenait au Pays des merveilles, Alice tomba sur une chenille étrange. À sa grande surprise, cette dernière se vantait d&amp;#39;avoir construit son propre site web en utilisant Javascript. Bien que le site semblait simple, Alice ne pouvait s&amp;#39;empêcher de se demander s&amp;#39;il était vraiment sécurisé.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Les sources de ce challenge sont fournies :&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;public&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── docker-compose.yml&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── Dockerfile&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;└── src&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ├── index.js&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ├── package.json&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ├── views&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    │└── index.ejs&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    └── yarn.lock&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Tweedle Dum &amp; Dee | FCSC 2023</title>
      <link>//localhost:1313/writeups/tweedle-dum-dee/</link>
      <pubDate>Thu, 27 Apr 2023 12:00:00 +0000</pubDate>
      <guid>//localhost:1313/writeups/tweedle-dum-dee/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h1 id=&#34;introduction-des-deux-challenges&#34;&gt;Introduction des deux challenges:&lt;/h1&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Au cours de ses aventures au Pays des merveilles, Alice a rencontré une curieuse paire de jumeaux : Tweedledee et Tweedledum. Les deux avaient créé un site web simpliste en utilisant Flask, une réalisation qui a suscité l&amp;#39;intérêt d&amp;#39;Alice. Avec son esprit curieux et son penchant pour la technologie, Alice ne pouvait s&amp;#39;empêcher de se demander si elle pouvait pirater leur création et en découvrir les secrets.&#xA;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>From ECC to Diffie-Hellman</title>
      <link>//localhost:1313/other/ecc-diffie-hellman/</link>
      <pubDate>Fri, 14 Apr 2023 12:00:00 +0000</pubDate>
      <guid>//localhost:1313/other/ecc-diffie-hellman/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;L&amp;rsquo;échange de clé de Diffie-Hellman est une méthode pour partager un secret entre 2 individus de manière sécurisé, même si leurs transmissions sont sur écoute.&lt;/p&gt;&#xA;&lt;h3 id=&#34;présentation-des-courbes-elliptiques-&#34;&gt;Présentation des courbes elliptiques :&lt;/h3&gt;&#xA;&lt;p&gt;Avant de s&amp;rsquo;attaquer à la partie cryptographique, il est nécessaire de comprendre le fonctionnement global des courbes elliptiques.&lt;/p&gt;&#xA;&lt;p&gt;Une courbe elliptique est un ensemble de points $(x,y)$ vérifiant une équation du type: $y^2=x^3+ax+b$, autrement dit , on définit une courbe elliptique comme :&lt;/p&gt;</description>
    </item>
    <item>
      <title>Cryptanalyse Linéaire d&#39;un AES-128</title>
      <link>//localhost:1313/aes/analyse-lineaire-aes/</link>
      <pubDate>Fri, 24 Feb 2023 12:00:00 +0000</pubDate>
      <guid>//localhost:1313/aes/analyse-lineaire-aes/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;AES est un chiffrement par bloc basé sur des opérations matricielles élémentaires. Avant de s&amp;rsquo;attaquer à tout ce système, il est important de les avoirs en tête. Voici donc une explication rapide sur le mode de fonctionnement d&amp;rsquo;AES.&lt;/p&gt;&#xA;&lt;h1 id=&#34;présentation-rapide-daes&#34;&gt;Présentation rapide d&amp;rsquo;AES&lt;/h1&gt;&#xA;&lt;p&gt;On souhaite chiffrer un bloc se &lt;em&gt;16 bytes&lt;/em&gt;, la première étape est de l&amp;rsquo;exprimer sous la forme de matrice 4*4:&lt;/p&gt;&#xA;&lt;p&gt;$$&#xA;\begin{pmatrix}&#xA;1 &amp;amp; 2 &amp;amp; 3 &amp;amp; 4 \newline&#xA;5 &amp;amp; 6 &amp;amp; 7 &amp;amp; 8 \newline&#xA;9 &amp;amp; 10 &amp;amp; 11 &amp;amp; 12 \newline&#xA;13 &amp;amp; 14 &amp;amp; 15 &amp;amp; 16 \newline&#xA;\end{pmatrix}&#xA;$$&#xA;Cette matrice va subir plusieurs modifications.&#xA;On définit un &lt;em&gt;round&lt;/em&gt; par l&amp;rsquo;enchainement des opérations :&lt;/p&gt;</description>
    </item>
    <item>
      <title>Feal &amp; it&#39;s variants</title>
      <link>//localhost:1313/other/feal-cipher/</link>
      <pubDate>Tue, 20 Dec 2022 12:00:00 +0000</pubDate>
      <guid>//localhost:1313/other/feal-cipher/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;Feal&lt;/strong&gt; est un algorithme de chiffrement présenté dans la fin des année 80 par &lt;em&gt;Akihiro Shimizu&lt;/em&gt; et &lt;em&gt;Shoji Miyaguchi&lt;/em&gt;. C&amp;rsquo;est un chiffrement par bloc qui à concurrencé le &lt;strong&gt;DES&lt;/strong&gt; et qui est aujourd&amp;rsquo;hui obsolète.&lt;/p&gt;&#xA;&lt;p&gt;Feal &lt;em&gt;(Fast Data Encipherment Algorithm)&lt;/em&gt; est un chiffrement de type &lt;strong&gt;réseau de Feistel&lt;/strong&gt;. Il a connu plusieurs variations que nous allons voir ici.&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;Par la suite , des illustrations seront issue du blog de &lt;a href=&#34;http://www.theamazingking.com&#34; target=&#34;_blank&#34;&gt;Jon King&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Shamir&#39;s Secret Sharing Sheme (SSSS)</title>
      <link>//localhost:1313/other/explanation--attack-on-shamirs-shared-secret/</link>
      <pubDate>Tue, 20 Dec 2022 12:00:00 +0000</pubDate>
      <guid>//localhost:1313/other/explanation--attack-on-shamirs-shared-secret/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://fr.wikipedia.org/wiki/Adi_Shamir&#34; target=&#34;_blank&#34;&gt;Adi Shamir&lt;/a&gt; , né le 6 juillet 1952 à Tel Aviv, est un mathématicien et un cryptologue israélien reconnu comme l&amp;rsquo;un des experts les plus éminents en cryptanalyse. Il a créé un algorithme de cryptographie utilisant le concept de partage de clé secrète.&lt;br&gt;&#xA;L&amp;rsquo;idée principal de son chiffrement est de partagé la clé de déchiffrement d&amp;rsquo;un algorithme quelconque en plusieurs parties. Seul la réunion de celles-ci conduiront au texte déchiffré.&lt;/p&gt;</description>
    </item>
    <item>
      <title>RSA n°10 | Oracle tell me the True</title>
      <link>//localhost:1313/rsa/rsa-10-oracle-tell-me-the-true/</link>
      <pubDate>Sat, 10 Dec 2022 14:00:00 +0000</pubDate>
      <guid>//localhost:1313/rsa/rsa-10-oracle-tell-me-the-true/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h1 id=&#34;introduction-&#34;&gt;Introduction :&lt;/h1&gt;&#xA;&lt;p&gt;Généralement, dans un contexte de CTF , il est possible de tomber sur un oracle de déchiffrement RSA , on nous donne accès :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;à un oracle permettant de déchiffrer des messages sauf le flag chiffré&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;le flag chiffré&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Voici donc plusieurs méthodes pour trouver le flag en clair :&lt;/p&gt;&#xA;&lt;h2 id=&#34;méthode-1&#34;&gt;Méthode 1:&lt;/h2&gt;&#xA;&lt;p&gt;La première méthode est de Factoriser le message $c$ .&#xA;On peut ainsi demander de déchiffrer les facteurs du flag puis re-multiplier les clairs entre eux pour récupérer le message original:&lt;/p&gt;</description>
    </item>
    <item>
      <title>RSA n°9 | Breaking Signature Shema</title>
      <link>//localhost:1313/rsa/rsa-9-breaking-signature-shema/</link>
      <pubDate>Fri, 09 Dec 2022 14:00:00 +0000</pubDate>
      <guid>//localhost:1313/rsa/rsa-9-breaking-signature-shema/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h1 id=&#34;introduction-&#34;&gt;Introduction :&lt;/h1&gt;&#xA;&lt;p&gt;Le chiffrement RSA permet l&amp;rsquo;utilisation d&amp;rsquo;un système de signature des messages lors de la transmission de ceux-ci.&lt;br&gt;&#xA;Ainsi, un message chiffré peut être accompagné de sa signature qui atteste de son intégrité au prêt du serveur.&lt;br&gt;&#xA;Voici un message chiffré &amp;amp; signé :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;$&amp;lt;s,c&amp;gt;$&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;fonctionnement-global&#34;&gt;Fonctionnement global.&lt;/h2&gt;&#xA;&lt;p&gt;Le chiffrement RSA se compose :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;un exposant de chiffrement&lt;/li&gt;&#xA;&lt;li&gt;une clé publique&lt;/li&gt;&#xA;&lt;li&gt;une clé privée&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;On va réutiliser les propriétés arithmétiques du chiffrement pour inventer la signature noté $s$ .&lt;/p&gt;</description>
    </item>
    <item>
      <title>RSA n°8 | CopperSmith saves you</title>
      <link>//localhost:1313/rsa/rsa-8-coppersmith-saves-you/</link>
      <pubDate>Thu, 08 Dec 2022 14:00:00 +0000</pubDate>
      <guid>//localhost:1313/rsa/rsa-8-coppersmith-saves-you/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h1 id=&#34;introduction-&#34;&gt;Introduction :&lt;/h1&gt;&#xA;&lt;p&gt;Don Coppersmith est un mathématicien et cryptologue américain né en 1950.&#xA;Il a contribué dans de nombreux domaines de la &lt;code&gt;Cryptographie&lt;/code&gt; et en particulier le chiffrement RSA.&lt;br&gt;&#xA;Il s&amp;rsquo;intéresse particulièrement aux liens possibles entre des &lt;strong&gt;notions d&amp;rsquo;algèbres&lt;/strong&gt; et les mathématiques arithmétiques du chiffrement RSA&lt;/p&gt;&#xA;&lt;h1 id=&#34;papier-de-recherche&#34;&gt;Papier de recherche:&lt;/h1&gt;&#xA;&lt;p&gt;CopperSmith présente un papier de recherche mathématique nommé : &lt;a href=&#34;https://cr.yp.to/bib/2001/coppersmith.pdf&#34; target=&#34;_blank&#34;&gt;&lt;em&gt;Finding Small Solutions to Small Degree Polynomials&lt;/em&gt;&lt;/a&gt;&lt;br&gt;&#xA;Il y explique comment trouver les racines de polynômes à &lt;code&gt;1&lt;/code&gt; et &lt;code&gt;2&lt;/code&gt; variables , modulo un entier &lt;strong&gt;n&lt;/strong&gt;  grâce à la réduction de base via des matrices et l&amp;rsquo;algorithme &lt;code&gt;Lenstra–Lenstra–Lovász&lt;/code&gt; &lt;em&gt;(LLL)&lt;/em&gt;.&#xA;C&amp;rsquo;est racines sont appelées &lt;em&gt;Small Roots&lt;/em&gt; et la technique de Coppersmith a été optimisée par &lt;code&gt;Howgrave-Graham&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>RSA n°7 | Hey this is Franklin (Reiter)</title>
      <link>//localhost:1313/rsa/rsa-7-hey-this-is-franklin/</link>
      <pubDate>Sun, 04 Dec 2022 14:00:00 +0000</pubDate>
      <guid>//localhost:1313/rsa/rsa-7-hey-this-is-franklin/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;&#xA;&lt;p&gt;L&amp;rsquo;attaque Franklin-Reiter sur le chiffrement RSA requiert d&amp;rsquo;avoir deux messages chiffrés avec une relation linéaire connu entre les deux messages.&lt;/p&gt;&#xA;&lt;h1 id=&#34;contextualisation&#34;&gt;Contextualisation&lt;/h1&gt;&#xA;&lt;p&gt;Exemple :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;$m_1 = 100000000000$&lt;/li&gt;&#xA;&lt;li&gt;$m_2 = 100000000999$&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Ici , si la relation entre les deux messages est linéaire puisque  $m_1 + 999 == m_2$.&#xA;Il est alors possible de retrouver le message à partir de :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;$c_1 = m_1^e \pmod n$&lt;/li&gt;&#xA;&lt;li&gt;$c_2 = m_2^e \pmod n$&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;A l’origine, cet attaque était faisable pour $e=3$ puis elle a était généralisée pour n&amp;rsquo;importe quel $e$ .&lt;br&gt;&#xA;(&lt;em&gt;Plus e est grand, plus l&amp;rsquo;attaque est longue&lt;/em&gt;)&lt;/p&gt;</description>
    </item>
    <item>
      <title>RSA n°6 | Message for all</title>
      <link>//localhost:1313/rsa/rsa-6-message-for-all/</link>
      <pubDate>Sat, 03 Dec 2022 14:00:00 +0000</pubDate>
      <guid>//localhost:1313/rsa/rsa-6-message-for-all/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;&#xA;&lt;p&gt;Il est courant d&amp;rsquo;envoyer le même message à plusieurs personnes et cela pose un gros problème de sécurité pour l&amp;rsquo;intégrité du message si une personne arrive à intercepter plusieurs communications.&lt;br&gt;&#xA;Nous allons ici parler de l&amp;rsquo;&lt;code&gt;attaque Hastads-Broadcast&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;h1 id=&#34;contextualisation&#34;&gt;Contextualisation&lt;/h1&gt;&#xA;&lt;p&gt;On sait qu&amp;rsquo;un message chiffré par &lt;strong&gt;RSA&lt;/strong&gt; est de la forme :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;$c = m^e \pmod n$&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Nous avions vu &lt;a href=&#34;https://vozec.fr/crypto-rsa/rsa-2-first-attacks/&#34; target=&#34;_blank&#34;&gt;ici&lt;/a&gt; que si $m$ était petit, on pouvait déchiffrer le message en appliquant une racine $3^{ième}$ au texte chiffré.&lt;/p&gt;</description>
    </item>
    <item>
      <title>RSA n°5 | E takes confidence</title>
      <link>//localhost:1313/rsa/rsa-5-e-takes-confidence/</link>
      <pubDate>Wed, 30 Nov 2022 14:00:00 +0000</pubDate>
      <guid>//localhost:1313/rsa/rsa-5-e-takes-confidence/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;&#xA;&lt;p&gt;Nous allons ici voir &lt;code&gt;3&lt;/code&gt; vulnérabilités sur RSA liées à un mauvais choix de l&amp;rsquo;exposant $e$.&lt;/p&gt;&#xA;&lt;h1 id=&#34;contextualisation&#34;&gt;Contextualisation&lt;/h1&gt;&#xA;&lt;p&gt;On sait que $d$ , clé privée du chiffrement &lt;strong&gt;RSA&lt;/strong&gt; est généré de la sorte:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;$d = e^{-1} \pmod \Phi(n)$&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Par convention, on utilise souvent $e=3$ ou $e=65537$ .&lt;/p&gt;&#xA;&lt;h2 id=&#34;pourquoi-&#34;&gt;Pourquoi ?&lt;/h2&gt;&#xA;&lt;p&gt;Ces nombres présentes plusieurs propriétés intéressante, d&amp;rsquo;abord :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;ils sont &lt;code&gt;premiers&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;ils sont &lt;code&gt;petits&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;C&amp;rsquo;est $2$ premières propriétés sont majeures , elles permettent un temps de calcul raisonnable pour le chiffrement/déchiffrement des messages .&lt;/p&gt;</description>
    </item>
    <item>
      <title>RSA n°4 | Fermat is Watching U</title>
      <link>//localhost:1313/rsa/rsa-4-fermat-to-the-rescue/</link>
      <pubDate>Tue, 29 Nov 2022 14:00:00 +0000</pubDate>
      <guid>//localhost:1313/rsa/rsa-4-fermat-to-the-rescue/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;&#xA;&lt;p&gt;Nous allons ici voir une vulnérabilité sur RSA liée à une mauvaise génération de clé publique.&lt;/p&gt;&#xA;&lt;h1 id=&#34;vulnérabilité-&#34;&gt;Vulnérabilité :&lt;/h1&gt;&#xA;&lt;p&gt;On rappelle que $n$ et généré avec $p$ et $q$ très grands:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;$n = p*q$ .&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;On se place dans un cas idéal ou $p$ et $q$ sont cryptographiques et que donc $n$ n&amp;rsquo;est pas cassable par force brute .&lt;/p&gt;&#xA;&lt;p&gt;La vulnérabilités réside dans le fait que $p$ et $q$ &lt;code&gt;sont très proches&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>RSA n°3 | Module/Premier commun</title>
      <link>//localhost:1313/rsa/rsa-3-all-in-common/</link>
      <pubDate>Tue, 29 Nov 2022 13:00:00 +0000</pubDate>
      <guid>//localhost:1313/rsa/rsa-3-all-in-common/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;&#xA;&lt;p&gt;Nous allons ici voir &lt;code&gt;2&lt;/code&gt; vulnérabilités sur RSA liés à une mauvaise gestion des clés publiques .&lt;/p&gt;&#xA;&lt;h1 id=&#34;common-modulus-&#34;&gt;Common Modulus .&lt;/h1&gt;&#xA;&lt;p&gt;On suppose le schéma suivant :&lt;/p&gt;&#xA;&lt;p&gt;On dispose de &lt;code&gt;2&lt;/code&gt; chiffrés différents à partir d&amp;rsquo;un même &lt;code&gt;message&lt;/code&gt; et d&amp;rsquo;une clé commune &lt;em&gt;(n)&lt;/em&gt;:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;$c_1 = e_1^{-1} \pmod {\Phi(n)}$&lt;/li&gt;&#xA;&lt;li&gt;$c_2 = e_2^{-1} \pmod {\Phi(n)}$&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Alors &lt;code&gt;si&lt;/code&gt; on a les égalité suivantes, &lt;code&gt;alors&lt;/code&gt; on peut décoder le message $c_1$ &lt;em&gt;( = $c_2$)&lt;/em&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>RSA n°2 | Premières attaques</title>
      <link>//localhost:1313/rsa/rsa-2-first-attacks/</link>
      <pubDate>Tue, 29 Nov 2022 12:00:00 +0000</pubDate>
      <guid>//localhost:1313/rsa/rsa-2-first-attacks/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;&#xA;&lt;p&gt;Nous avons vu précédemment &lt;em&gt;(&lt;a href=&#34;https://vozec.fr/crypto-rsa/rsa-1-basis/&#34; target=&#34;_blank&#34;&gt;ici&lt;/a&gt;)&lt;/em&gt; que le chiffrement RSA reposait sur &lt;code&gt;2&lt;/code&gt; nombres premiers , notés $p$ et $q$.&#xA;Grâce à ces deux nombres cryptographiquement grands, il était ainsi possible de générer une paires de clé $(publique/privée)$ et chiffrer des messages grâce à celle-ci.&lt;/p&gt;&#xA;&lt;p&gt;Nous allons voir ici quelques premières vulnérabilités sur le chiffrement RSA.&lt;/p&gt;&#xA;&lt;h1 id=&#34;1-p-et-q-trop-petits&#34;&gt;1) $P$ et $Q$ trop petits.&lt;/h1&gt;&#xA;&lt;p&gt;On rappelle que la clé privée est :&lt;br&gt;&#xA;$d = e^{-1} \pmod {\Phi(n)}$&lt;br&gt;&#xA;Avec $\Phi(n) = (p-1)(q-1)$&lt;/p&gt;</description>
    </item>
    <item>
      <title>RSA n°1 | Principes Fondamentaux</title>
      <link>//localhost:1313/rsa/rsa-1-basis/</link>
      <pubDate>Sat, 26 Nov 2022 12:00:00 +0000</pubDate>
      <guid>//localhost:1313/rsa/rsa-1-basis/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;&#xA;&lt;p&gt;Le chiffrement RSA est utilisé pour chiffrer des communications, il est aujourd&amp;rsquo;hui souvent utilisé pour les certificats SSL sur internet ou encore les clés de connections via le protocole &lt;strong&gt;ssh&lt;/strong&gt;.&#xA;Il est dit &lt;code&gt;asymétrique&lt;/code&gt; car il fonctionne par paires de clés. Toute la sécurité de ce chiffrement repose sur le fait qu&amp;rsquo;il est aujourd&amp;rsquo;hui infiniment long de factoriser un nombre cryptographique rapidement .&lt;br&gt;&#xA;&lt;em&gt;Ronald Rivest&lt;/em&gt;, &lt;em&gt;Adi Shamir&lt;/em&gt; et &lt;em&gt;Leonard Adleman&lt;/em&gt; ont ainsi crée un chiffrement basé sur l&amp;rsquo;arithmétique modulaire, encore d&amp;rsquo;actualité aujourd&amp;rsquo;hui.&lt;/p&gt;</description>
    </item>
    <item>
      <title>RSA n°0 | Bases Mathématiques</title>
      <link>//localhost:1313/rsa/rsa-0-maths-basis/</link>
      <pubDate>Fri, 25 Nov 2022 12:00:00 +0000</pubDate>
      <guid>//localhost:1313/rsa/rsa-0-maths-basis/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;Voici les différents théorèmes et application pour comprendre le chiffrement RSA&lt;/p&gt;&#xA;&lt;h2 id=&#34;opération-modulaires&#34;&gt;Opération Modulaires&lt;/h2&gt;&#xA;&lt;p&gt;L&amp;rsquo;opérateur modulo et une opération qui retourne le reste de la division euclidienne d&amp;rsquo;un nombre A par B:&lt;/p&gt;&#xA;&lt;p&gt;$a \equiv r \pmod b$&lt;br&gt;&#xA;$\Rightarrow~\exists&lt;del&gt;k \in N&lt;/del&gt;|~a = b*k + r$&lt;/p&gt;&#xA;&lt;p&gt;Si r = 0 , on dit que &lt;code&gt;n divise a&lt;/code&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;pgcd&#34;&gt;Pgcd&lt;/h2&gt;&#xA;&lt;p&gt;Le &lt;code&gt;PGCD&lt;/code&gt; &lt;em&gt;(ou gcd)&lt;/em&gt; de 2 nombres est le plus grand diviseur commun de ces deux nombres :&lt;/p&gt;</description>
    </item>
    <item>
      <title>Oracle Tranquille 1&amp;2 | hackademint CTF 2022 | Catégorie Crypto | [Vozec/FR]</title>
      <link>//localhost:1313/writeups/oracle-rsa-hackademint/</link>
      <pubDate>Mon, 19 Sep 2022 12:00:00 +0000</pubDate>
      <guid>//localhost:1313/writeups/oracle-rsa-hackademint/</guid>
      <description>&lt;h1 id=&#34;oracle-tranquille-12--hackademint-2022&#34;&gt;Oracle Tranquille 1&amp;amp;2 | Hackademint 2022&lt;/h1&gt;&#xA;&lt;h2 id=&#34;nécessaires&#34;&gt;Nécessaires&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Python3 + Pwntools&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;descriptions-&#34;&gt;Descriptions :&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Challenge &lt;em&gt;1&lt;/em&gt; :&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Nous avons trouvé un étrange service ouvert sur un de nos services hier. Complot des Illuminati? Prise de pouvoir des machines ? Opération marketing pour la sortie du prochain album de Justin Bieber ? Simple Oracle de déchiffrement RSA? Difficile de trancher. Pourriez-vous y jeter un coup d&amp;#39;œil?&#xA;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Présentation de l&#39;attaque &#39;Padding Oracle&#39; sur de l&#39;AES ECB</title>
      <link>//localhost:1313/aes/attaque-oracle-padding-aes_ecb/</link>
      <pubDate>Mon, 19 Sep 2022 12:00:00 +0000</pubDate>
      <guid>//localhost:1313/aes/attaque-oracle-padding-aes_ecb/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;AES (&amp;ldquo;Advanced Encryption Standard&amp;rdquo;) est un chiffrement symétrique par blocs. En effet, il repose sur le chiffrement de données découpées en plusieurs partie. Ainsi il en &lt;strong&gt;existe plusieurs modes&lt;/strong&gt; :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;ECB&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;CBC&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;CFB&lt;/li&gt;&#xA;&lt;li&gt;OFB&lt;/li&gt;&#xA;&lt;li&gt;CTR&lt;/li&gt;&#xA;&lt;li&gt;CTS&lt;/li&gt;&#xA;&lt;li&gt;&amp;hellip;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Aujourd’hui, nous allons aborder &lt;strong&gt;une attaque présente sur l&amp;rsquo;AES en mode ECB&lt;/strong&gt; .&lt;/p&gt;&#xA;&lt;h2 id=&#34;comprendre-le-mode-ecb&#34;&gt;Comprendre le mode &lt;code&gt;ECB&lt;/code&gt;&lt;/h2&gt;&#xA;&lt;p&gt;Comme présenté avant, &lt;code&gt;ECB&lt;/code&gt; est un mode de chiffrement des blocs d’information.&lt;br&gt;&#xA;&lt;em&gt;(&lt;code&gt;ECB&lt;/code&gt; pour &lt;code&gt;Electronic Code Book&lt;/code&gt;)&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Lutter contre la triche en CTF ?</title>
      <link>//localhost:1313/posts/anti-cheat-ctf/</link>
      <pubDate>Tue, 23 Aug 2022 12:00:00 +0000</pubDate>
      <guid>//localhost:1313/posts/anti-cheat-ctf/</guid>
      <description>&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;&#xA;&lt;p&gt;Dans cet article, je vais présenter les différentes possibilités pour empêcher la triche en compétition, notamment sur des CTF basés sur CTFd. Je précise que ces techniques permettent de mettre en avant les comptes suspects. Il y a plusieurs façons de repérer les tricheurs en suivant ces critères, et inversement, il y a malheureusement plusieurs façons de contourner ces protections. Tout ce que je vais expliquer ici sert donc à mettre en avant un compte ou une équipe afin que des admins procèdent à une vérification manuelle et agissent en conséquence.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Writeup All Reverse Challenges CTF 2022 | PwnMe 2022 Edition</title>
      <link>//localhost:1313/writeups/reverse-challenge-ctf-pwnme2022/</link>
      <pubDate>Mon, 04 Jul 2022 12:00:00 +0000</pubDate>
      <guid>//localhost:1313/writeups/reverse-challenge-ctf-pwnme2022/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://img.shields.io/badge/date-29.06.2022-brightgreen.svg&#34; alt=&#34;date&#34;&gt;&lt;br&gt;&#xA;&lt;img src=&#34;https://img.shields.io/badge/solved-in%20time%20of%20CTF-brightgreen.svg&#34; alt=&#34;solved in time of CTF&#34;&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;description&#34;&gt;Description&lt;/h1&gt;&#xA;&lt;p&gt;Le CTF propose &lt;strong&gt;5 Challenges&lt;/strong&gt; de reverse :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;2 de  &lt;strong&gt;Bryton#2690&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;1 de  &lt;strong&gt;express#7904&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;1 de &lt;strong&gt;kostadin#0792&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;prérequis&#34;&gt;Prérequis&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;IDA&lt;/li&gt;&#xA;&lt;li&gt;Connaissances basiques de CTF&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;its-easy&#34;&gt;It&amp;rsquo;s easy&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Nom&lt;/strong&gt;  : It&amp;rsquo;s easy&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Point&lt;/strong&gt; : 50&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Description&lt;/strong&gt; : Can you find the secret in this binary ?&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;File&lt;/strong&gt; : &lt;a href=&#34;./file/ez&#34;&gt;ez&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h6 id=&#34;solution-&#34;&gt;Solution :&lt;/h6&gt;&#xA;&lt;p&gt;On peut regarder les &lt;strong&gt;strings&lt;/strong&gt; présentes dans le binaire :&lt;/p&gt;</description>
    </item>
    <item>
      <title>Intrinsec CTF 2022 | leHack 2022 Edition</title>
      <link>//localhost:1313/writeups/intrinsec-ctf-lehack2022/</link>
      <pubDate>Thu, 30 Jun 2022 12:00:00 +0000</pubDate>
      <guid>//localhost:1313/writeups/intrinsec-ctf-lehack2022/</guid>
      <description>&lt;h1 id=&#34;description&#34;&gt;Description&lt;/h1&gt;&#xA;&lt;p&gt;Ce CTF est proposé par &lt;a href=&#34;https://www.intrinsec.com/&#34; target=&#34;_blank&#34;&gt;Intrinsec&lt;/a&gt; , crée par &lt;a href=&#34;https://twitter.com/th1b4ud&#34; target=&#34;_blank&#34;&gt;Th1b4ud&lt;/a&gt; et est constitué de &lt;code&gt;12 Challenges&lt;/code&gt;.&#xA;On évolue tout au long des objectifs dans un réseau afin de compromettre toutes les machines les unes après les autres.&lt;/p&gt;&#xA;&lt;h1 id=&#34;thèmes&#34;&gt;Thèmes&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Web&lt;/li&gt;&#xA;&lt;li&gt;Pivoting&lt;/li&gt;&#xA;&lt;li&gt;Blockchain (SmartContract)&lt;/li&gt;&#xA;&lt;li&gt;Forensic&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;prérequis&#34;&gt;Prérequis&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Du temps&lt;/li&gt;&#xA;&lt;li&gt;Un vps de préférence&lt;/li&gt;&#xA;&lt;li&gt;Connaissance basique de CTF&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;*J&amp;rsquo;ai appris beaucoup de choses pendant la compétition et c&amp;rsquo;est assez facile à comprendre en faisant les challenges en parallèles. *&lt;/p&gt;</description>
    </item>
    <item>
      <title>RustyTheClown | leHack 2022 | Catégorie reverse</title>
      <link>//localhost:1313/writeups/rustytheclown-lehack2022/</link>
      <pubDate>Sun, 26 Jun 2022 12:00:00 +0000</pubDate>
      <guid>//localhost:1313/writeups/rustytheclown-lehack2022/</guid>
      <description>&lt;h1 id=&#34;rustytheclown-2--lehack-ctf-2022&#34;&gt;RustyTheClown 2 | leHack CTF 2022&lt;/h1&gt;&#xA;&lt;h2 id=&#34;fichiers&#34;&gt;Fichier(s)&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;./files/rustyTheClown&#34;&gt;RustyTheClown&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;nécessaires&#34;&gt;Nécessaires&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://hex-rays.com/ida-free/&#34; target=&#34;_blank&#34;&gt;IDA&lt;/a&gt;/&lt;a href=&#34;https://ghidra-sre.org/&#34; target=&#34;_blank&#34;&gt;Ghidra&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Python3&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;flag&#34;&gt;Flag&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;lh_68eca3c515dbefd71ec8fec3849ba0083af806447d9f9f7cdca2a5cc&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;solution-détaillée&#34;&gt;Solution détaillée&lt;/h2&gt;&#xA;&lt;h3 id=&#34;analyse-statique&#34;&gt;Analyse Statique&lt;/h3&gt;&#xA;&lt;p&gt;Le challenge est un crackme . On nous demande un mot de passe et celui est modifié puis comparé avant de nous donner ou non le flag .&lt;/p&gt;&#xA;&lt;p&gt;Désassemblons le binaire dans IDA :&lt;/p&gt;&#xA;&lt;p&gt;Dans &lt;code&gt;void rustyTheClown::main::hecc4c87ee1b9aeab()&lt;/code&gt; voici ce qu&amp;rsquo;on trouve d&amp;rsquo;important :&lt;/p&gt;</description>
    </item>
    <item>
      <title>Mod ctfauth | Bsidessf 2022 | Catégorie Reverse | [Vozec/FR]</title>
      <link>//localhost:1313/writeups/mod_ctfauth-bsidessf-2022/</link>
      <pubDate>Fri, 10 Jun 2022 12:00:00 +0000</pubDate>
      <guid>//localhost:1313/writeups/mod_ctfauth-bsidessf-2022/</guid>
      <description>&lt;h1 id=&#34;mod-ctfauth--tjctf-2022&#34;&gt;Mod ctfauth | Tjctf 2022&lt;/h1&gt;&#xA;&lt;h2 id=&#34;fichiers&#34;&gt;Fichier(s)&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;./files/httpd.conf&#34;&gt;Challenge files&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;./files/ctfauth.so&#34;&gt;Challenge files&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;nécessaires&#34;&gt;Nécessaires&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Python3 + Ida + Ghidra&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;flag&#34;&gt;Flag&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;CTF{http_headers_amiright}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;solution-détaillée&#34;&gt;Solution détaillée&lt;/h2&gt;&#xA;&lt;h3 id=&#34;partie-1-découverte-du-challenge&#34;&gt;Partie 1: Découverte du challenge&lt;/h3&gt;&#xA;&lt;p&gt;Ce challenge mélange un peu de Web et une majorité de reverse.&#xA;Deux fichiers sont fournis,&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Une configuration apache2&lt;/li&gt;&#xA;&lt;li&gt;Un fichier &lt;code&gt;.so&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Le lien d&amp;rsquo;un site web (Hébergé en local pour le writeup)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Voici ce que nous avons quand nous nous rendons sur le site :&lt;/p&gt;</description>
    </item>
    <item>
      <title>Présentation de l&#39;attaque &#39;Bit Flipping&#39; sur de l&#39;AES CBC</title>
      <link>//localhost:1313/aes/attaque-bit-flipping-aes_cbc/</link>
      <pubDate>Wed, 25 May 2022 12:00:00 +0000</pubDate>
      <guid>//localhost:1313/aes/attaque-bit-flipping-aes_cbc/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;AES (&amp;ldquo;Advanced Encryption Standard&amp;rdquo;) est un chiffrement symétrique par blocs. En effet, il repose sur le chiffrement de données découpées en plusieurs partie. Ainsi il en &lt;strong&gt;existe plusieurs modes&lt;/strong&gt; :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;ECB&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;CBC&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;CFB&lt;/li&gt;&#xA;&lt;li&gt;OFB&lt;/li&gt;&#xA;&lt;li&gt;CTR&lt;/li&gt;&#xA;&lt;li&gt;CTS&lt;/li&gt;&#xA;&lt;li&gt;&amp;hellip;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Aujourd&amp;rsquo;hui , nous allons voir &lt;strong&gt;une attaque présente sur l&amp;rsquo;AES en mode CBC&lt;/strong&gt; .&lt;/p&gt;&#xA;&lt;h2 id=&#34;comprendre-le-mode-cbc&#34;&gt;Comprendre le mode &lt;code&gt;CBC&lt;/code&gt;&lt;/h2&gt;&#xA;&lt;p&gt;Comme présenté avant, &lt;code&gt;CBC&lt;/code&gt; est un mode de chiffrement d&amp;rsquo;AES . &lt;code&gt;CBC&lt;/code&gt; pour &lt;code&gt;Chain By Chain&lt;/code&gt;&#xA;Tout son fonctionnement peut être résumé dans le schéma suivant:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Eyes Closed | Hackrocks &amp; HackArmour CTF 2022 | Catégorie Pwn | [Vozec/FR] &amp; [Electro/FR]</title>
      <link>//localhost:1313/writeups/eyes_closed-hackarmour-2022/</link>
      <pubDate>Sun, 22 May 2022 12:00:00 +0000</pubDate>
      <guid>//localhost:1313/writeups/eyes_closed-hackarmour-2022/</guid>
      <description>&lt;h1 id=&#34;eyes-closed--hackrocks--hackarmour-ctf-2022&#34;&gt;Eyes Closed | Hackrocks &amp;amp; HackArmour CTF 2022&lt;/h1&gt;&#xA;&lt;h2 id=&#34;necessaires&#34;&gt;Necessaires&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Netcat&lt;/li&gt;&#xA;&lt;li&gt;Python3 (+ pwntool)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;flag&#34;&gt;Flag&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;flag{br0p0p0p0p0_with_f0rm4t_$7ringggg}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;solution-détaillée&#34;&gt;Solution détaillée&lt;/h2&gt;&#xA;&lt;p&gt;Le but du challenge est d&amp;rsquo;exploiter une format string puis d&amp;rsquo;utiliser un buffer overflow pour ainsi construire une ropchain et ainsi pouvoir prendre le contrôle du binaire grâce à une attaque ret2libc.&lt;/p&gt;&#xA;&lt;h5 id=&#34;un-peu-dexplication-&#34;&gt;Un peu d&amp;rsquo;explication :&lt;/h5&gt;&#xA;&lt;p&gt;La méthode finale est la même que dans un de mes &lt;a href=&#34;https://vozec.fr/writeups/vacation2-tjctf-2022/&#34; target=&#34;_blank&#34;&gt;précédents article&lt;/a&gt; .&#xA;Ce Writeup va donc se focaliser sur la partie &lt;strong&gt;Blind&lt;/strong&gt; du challenge ainsi que l&amp;rsquo;exploitation des &lt;strong&gt;formats strings&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Factor Master | tjctf 2022 | Catégorie Crypto | [Vozec/FR] &#43; [Eletro/FR] </title>
      <link>//localhost:1313/writeups/factormaster-tjctf-2022/</link>
      <pubDate>Sun, 15 May 2022 12:00:00 +0000</pubDate>
      <guid>//localhost:1313/writeups/factormaster-tjctf-2022/</guid>
      <description>&lt;h1 id=&#34;factor-master--tjctf-2022&#34;&gt;Factor Master | Tjctf 2022&lt;/h1&gt;&#xA;&lt;h2 id=&#34;fichiers&#34;&gt;Fichier(s)&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;./files/server.py&#34;&gt;Challenge files&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;necessaires&#34;&gt;Necessaires&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Python3 + Pwntools&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;flag&#34;&gt;Flag&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;tjctf{S0_y0u_r34lly_c4n_F4c7t0r_4ny7th1nG_c36f63cfe73c}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;solution-détaillée&#34;&gt;Solution détaillée&lt;/h2&gt;&#xA;&lt;p&gt;Le challenge se décompose en 3 parties : 3 fois le serveur va nous fournir un nombre et nous allons devoir le factoriser en 2 produits de nombres premiers ; à la manière d&amp;rsquo;un chiffrement RSA.&lt;/p&gt;&#xA;&lt;p&gt;Commencons directement avec la première étape:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Vacation2 | Tjctf 2022 | Catégorie Pwn</title>
      <link>//localhost:1313/writeups/vacation2-tjctf-2022/</link>
      <pubDate>Sun, 15 May 2022 12:00:00 +0000</pubDate>
      <guid>//localhost:1313/writeups/vacation2-tjctf-2022/</guid>
      <description>&lt;h1 id=&#34;vacation2--tjctf-2022&#34;&gt;Vacation2 | Tjctf 2022&lt;/h1&gt;&#xA;&lt;h2 id=&#34;fichiers&#34;&gt;Fichier(s)&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;./files/challenge.zip&#34;&gt;Challenge files&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;necessaires&#34;&gt;Necessaires&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Netcat&lt;/li&gt;&#xA;&lt;li&gt;Python3 (+ pwntool)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;flag&#34;&gt;Flag&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;tjctf{w3_g0_wher3_w3_w4nt_t0!_66f7020620e343ff}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;solution-détaillée&#34;&gt;Solution détaillée&lt;/h2&gt;&#xA;&lt;p&gt;Le but du challenge est d&amp;rsquo;exploiter un buffer overflow pour ainsi construire une ropchain et ainsi pouvoir prendre le contrôle du binaire grâce à une attaque ret2libc.&lt;/p&gt;&#xA;&lt;h5 id=&#34;un-peu-dexplication-&#34;&gt;Un peu d&amp;rsquo;explication :&lt;/h5&gt;&#xA;&lt;p&gt;Voici la source du challenge :&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;vacation&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; buf[&lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;puts&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Where am I going today?&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;fgets&lt;/span&gt;(buf, &lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt;, stdin);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;setbuf&lt;/span&gt;(stdout, NULL);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;vacation&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;puts&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hmm... that doesn&amp;#39;t sound very interesting...&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Lucky | TamuCtf 2022 | Catégorie Pwn | [Vozec/FR] </title>
      <link>//localhost:1313/writeups/lucky-tamuctf-2022/</link>
      <pubDate>Tue, 19 Apr 2022 12:00:00 +0000</pubDate>
      <guid>//localhost:1313/writeups/lucky-tamuctf-2022/</guid>
      <description>&lt;h2 id=&#34;fichiers&#34;&gt;Fichier(s)&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;./files/tweetybirb&#34;&gt;Lucky&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;./files/tweetybirb&#34;&gt;Lucky.c&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;nécessaires&#34;&gt;Nécessaires&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Python3 (+ pwntool)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;flag&#34;&gt;Flag&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;gigem{un1n1t14l1z3d_m3m0ry_15_r4nd0m_r1ght}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;solution-détaillée&#34;&gt;Solution détaillée&lt;/h2&gt;&#xA;&lt;p&gt;Le but du challenge est de sauter dans une fonction &lt;em&gt;Win&lt;/em&gt; qui fait pop le flag :&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;win&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;char&lt;/span&gt; flag[&lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    FILE&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; f &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fopen&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;flag.txt&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;r&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;fread&lt;/span&gt;(flag, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;sizeof&lt;/span&gt;(flag), f);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Nice work! Here&amp;#39;s the flag: %s&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, flag);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Algorithm | DefCamp 2022 | Catégorie Crypto | [Vozec/FR] </title>
      <link>//localhost:1313/writeups/algorithm-defcamp-2022/</link>
      <pubDate>Sat, 12 Feb 2022 12:00:00 +0000</pubDate>
      <guid>//localhost:1313/writeups/algorithm-defcamp-2022/</guid>
      <description>&lt;h2 id=&#34;fichiers&#34;&gt;Fichier(s)&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;./files/chall.py&#34;&gt;Chall.py&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;./files/flag_enc.txt&#34;&gt;Flag_enc&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;nécessaires&#34;&gt;Nécessaires&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Python3&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;flag&#34;&gt;Flag&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;CTF{267a4401ea64e7167168969743dcc708399e3823d40e4ae37c78d675e281cb14}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;&#xA;&lt;p&gt;Hello friends. Just a regular algorithm&#xA;Flag format: CTF{sha256(message_decrypt)}&lt;/p&gt;&#xA;&lt;h2 id=&#34;solution-détaillée&#34;&gt;Solution détaillée&lt;/h2&gt;&#xA;&lt;p&gt;Dans &lt;code&gt;Flag_enc&lt;/code&gt; on retrouve le flag chiffré : &lt;code&gt;242712673639869973827786401934639193473972235217215301&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;Analysons le chiffrement dans &lt;code&gt;chall.py&lt;/code&gt; :&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;flag &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; [test]&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hflag &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; flag&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;encode(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hex&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;iflag &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; int(hflag[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:], &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;polinom&lt;/span&gt;(n, m):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   z &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; n &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; n &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &#x9;&#x9;z&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; (n &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &#x9;&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &#x9;&#x9;z&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &#x9;n &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (n &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; z[i])&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &#x9;i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   z &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; z[::&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   l &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; len(z)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, l):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       s &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; z[i] &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; m &lt;span style=&#34;color:#f92672&#34;&gt;**&lt;/span&gt; (l &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; i)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; s&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;r &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; len(str(iflag)):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   d &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; str(iflag)[i:i&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   nf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; polinom(int(d), &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   r &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; str(nf)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   i &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print r&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Writeup Herald | Insomnihack 2022 | Catégorie reverse | [Vozec/FR] </title>
      <link>//localhost:1313/writeups/herald-insomnihack-ctf-2022/</link>
      <pubDate>Sun, 30 Jan 2022 12:00:00 +0000</pubDate>
      <guid>//localhost:1313/writeups/herald-insomnihack-ctf-2022/</guid>
      <description>&lt;h2 id=&#34;fichiers&#34;&gt;Fichier(s)&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;./files/Original.apk&#34;&gt;Herald.apk&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;nécessaires&#34;&gt;Nécessaires&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Un téléphone Android&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.haibison.apksigner&#34; target=&#34;_blank&#34;&gt;Apk-signer&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://ibotpeaches.github.io/Apktool/&#34; target=&#34;_blank&#34;&gt;Apktool&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/skylot/jadx&#34; target=&#34;_blank&#34;&gt;Jdax&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;flag&#34;&gt;Flag&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;INS{Y0u_Kn0W_aB0uT_Th3_Her4ld_0F_the_G0ds?}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;description&#34;&gt;Description&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Our lab administrator has just passed out from a strange virus. Please help us find the password to his messaging app so we can identify what he was working on and save his life.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;solution-détaillée&#34;&gt;Solution détaillée&lt;/h2&gt;&#xA;&lt;p&gt;La première chose que j&amp;rsquo;ai faite et de mettre mon fichier apk dans &lt;em&gt;Jdax&lt;/em&gt; pour voir le code source est commencé à reverse :&lt;/p&gt;</description>
    </item>
    <item>
      <title>Android CrackMe Native | CyberSpace CTF 2022 | Catégorie Reverse | [Vozec/FR] </title>
      <link>//localhost:1313/writeups/android-crackme-native_cyberspacectf/</link>
      <pubDate>Tue, 11 Jan 2022 12:00:00 +0000</pubDate>
      <guid>//localhost:1313/writeups/android-crackme-native_cyberspacectf/</guid>
      <description>&lt;h2 id=&#34;fichiers&#34;&gt;Fichier(s)&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;./files/CrackMe.apk&#34;&gt;Android App&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;nécessaires&#34;&gt;Nécessaires&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Ghidra&lt;/li&gt;&#xA;&lt;li&gt;Python3&lt;/li&gt;&#xA;&lt;li&gt;Jdax&lt;/li&gt;&#xA;&lt;li&gt;Apktool&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;flag&#34;&gt;Flag&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;HL{J4v4.nativ3.d0.n0t.c4r3}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;solution-détaillée&#34;&gt;Solution détaillée&lt;/h2&gt;&#xA;&lt;p&gt;La première chose est de décompiler l&amp;rsquo;apk pour en retrouver le code Java .&#xA;J&amp;rsquo;ai utilisé Apktool pour extraire le code smali et avoir tous les fichiers natifs :&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apktool d CrackMe.apk&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Puis j&amp;rsquo;ai passé l&amp;rsquo;apk dans Jadx, un outil très utilisé pour le reverse de code Java  :&lt;/p&gt;</description>
    </item>
    <item>
      <title>Malware Analysis d&#39;une Virus Télégram</title>
      <link>//localhost:1313/posts/analyse-telegram-stealer/</link>
      <pubDate>Sat, 08 Jan 2022 12:00:00 +0000</pubDate>
      <guid>//localhost:1313/posts/analyse-telegram-stealer/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;Je suis tombé sur ce .exe et j&amp;rsquo;ai décidé de l&amp;rsquo;analyser.&#xA;Voici le fichier : &lt;a href=&#34;./files/Do_Not_Execute&#34;&gt;ici&lt;/a&gt;&#xA;&lt;em&gt;Attention à ne pas l&amp;rsquo;executer !&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;commencement&#34;&gt;Commencement&lt;/h2&gt;&#xA;&lt;p&gt;Comme le dernier analyse de malware , j&amp;rsquo;ai regardé sur Dnspy si le code était obfusqué .&#xA;A notre plus grande surprise il ne l&amp;rsquo;était pas !&#xA;Regardons de quoi est composé notre payload :&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;./img/dnspy.png&#34; alt=&#34;All text&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;La Première chose qui saute aux yeux et que c&amp;rsquo;est un malware !&#xA;Regardons la Class &lt;code&gt;Client&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Execution de ShellCode grâce au Dll Hidjacking</title>
      <link>//localhost:1313/posts/pourquoi-vous-devez-securiser-vos-dll-2/</link>
      <pubDate>Sun, 05 Dec 2021 12:00:00 +0000</pubDate>
      <guid>//localhost:1313/posts/pourquoi-vous-devez-securiser-vos-dll-2/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;Nous avons déjà parlé du DLL Hidjacking dans un article précédent. Nous avions détourné la Bibliothèque &lt;em&gt;LeafXnet.dll&lt;/em&gt;.&#xA;Nous aurions pu utiliser une autre, comme &lt;em&gt;Newtonsoft.Json.dll&lt;/em&gt; ou encore &lt;em&gt;Colorful.Console.dll&lt;/em&gt; .&#xA;Voici le résultat que nous avions la dernière fois :&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;./img/hijacked.png&#34; alt=&#34;Alt text&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Nous récupérions juste les requêtes pour les écrire dans un fichier texte.&lt;/p&gt;&#xA;&lt;h3 id=&#34;petit-rappel&#34;&gt;Petit Rappel&lt;/h3&gt;&#xA;&lt;p&gt;Le Dll Hidjacking consiste à modifier une bibliothèque appelée par un programme et ainsi ajouter du code exécuter.&#xA;Ainsi la fonction qui est appelée exécutera ce qu&amp;rsquo;elle est censée faire pour que le programme continue de fonctionner mais elle exécutera des actions en plus.&#xA;Voir &lt;a href=&#34;http://vozec.fr/articles/pourquoi-vous-devez-s%C3%A9curiser-vos-dll/&#34; target=&#34;_blank&#34;&gt;mon ancien article ici&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Writeup Crackity | TFC CTF 2021 | Catégorie reverse</title>
      <link>//localhost:1313/writeups/crackity-tfc-ctf-2021/</link>
      <pubDate>Fri, 03 Dec 2021 12:00:00 +0000</pubDate>
      <guid>//localhost:1313/writeups/crackity-tfc-ctf-2021/</guid>
      <description>&lt;h1 id=&#34;unknown-2--grabcon-ctf-2021&#34;&gt;Unknown 2 | GrabCon CTF 2021&lt;/h1&gt;&#xA;&lt;h2 id=&#34;fichiers&#34;&gt;Fichier(s)&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;./files/crackity.jar&#34;&gt;Crackity.jar&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;nécessaires&#34;&gt;Nécessaires&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://java-decompiler.github.io/&#34; target=&#34;_blank&#34;&gt;jd-gui&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Python3&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;flag&#34;&gt;Flag&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;TFCCTF{j4v4_0bfusc4t10n_1s_pr3tty_n0t_pr3tty}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;solution-détaillée&#34;&gt;Solution détaillée&lt;/h2&gt;&#xA;&lt;p&gt;La solution n&amp;rsquo;est pas très longue mais elle permet d&amp;rsquo;introduire le reverse de fichier .jar avec un exemple assez basique.&lt;/p&gt;&#xA;&lt;p&gt;Nous avons donc un fichier &lt;code&gt;java&lt;/code&gt; à reverse pour trouver le Flag.&#xA;J&amp;rsquo;ai d&amp;rsquo;abord essayé d&amp;rsquo;exécuter le fichier mais il semble cassé, et je ne peux le lancer.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Malware Analysis d&#39;un Fake Cheat</title>
      <link>//localhost:1313/posts/analyse-fake-cheat-valorant/</link>
      <pubDate>Thu, 25 Nov 2021 12:00:00 +0000</pubDate>
      <guid>//localhost:1313/posts/analyse-fake-cheat-valorant/</guid>
      <description>&lt;hr&gt;&#xA;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;Je suis tombé sur ce prétendu Cheat Valorant et j&amp;rsquo;ai décidé de l&amp;rsquo;analyser.&#xA;Voici le fichier : &lt;a href=&#34;./files/Do_Not_Execute&#34;&gt;ici&lt;/a&gt;&#xA;Attention à ne pas l&amp;rsquo;exécuter !&lt;/p&gt;&#xA;&lt;h2 id=&#34;commencement&#34;&gt;Commencement&lt;/h2&gt;&#xA;&lt;p&gt;Après avoir téléchargé le .exe, je lui supprime tout de suite son extension &lt;em&gt;.exe&lt;/em&gt; pour éviter de le lancer par erreur en cliquant dessus.&lt;/p&gt;&#xA;&lt;p&gt;Je lance DetectItEasy et je me rends compte qu&amp;rsquo;il est compilé en .Net&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;./img/die.png&#34; alt=&#34;All text&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>TweetyBirb | KillerQueen 2021 | Catégorie Pwn</title>
      <link>//localhost:1313/writeups/tweetybirb-killerqueenctf-2021/</link>
      <pubDate>Thu, 25 Nov 2021 12:00:00 +0000</pubDate>
      <guid>//localhost:1313/writeups/tweetybirb-killerqueenctf-2021/</guid>
      <description>&lt;h1 id=&#34;tweetybirb--killerqueen-2021&#34;&gt;TweetyBirb | KillerQueen 2021&lt;/h1&gt;&#xA;&lt;h2 id=&#34;fichiers&#34;&gt;Fichier(s)&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;./files/tweetybirb&#34;&gt;Tweetybirb&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;necessaires&#34;&gt;Necessaires&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Netcat&lt;/li&gt;&#xA;&lt;li&gt;Python3 (+ pwntool)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;flag&#34;&gt;Flag&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;kqctf{tweet_tweet_did_you_leak_or_bruteforce_..._plz_dont_say_you_tried_bruteforce}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;solution-détaillée&#34;&gt;Solution détaillée&lt;/h2&gt;&#xA;&lt;p&gt;Le but du challenge est de contourner une protection anti-smashing du binaire : &lt;code&gt;Canary&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;./img/checksec.png&#34; alt=&#34;Alt text&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Nous devons d&amp;rsquo;abord voir si un BOF est possible. Ici il n&amp;rsquo;y a que 2 input donc sans grande surprise, on trouve notre point d&amp;rsquo;entré :&lt;/p&gt;</description>
    </item>
    <item>
      <title>Comment contourner le SSL Pinning sur android</title>
      <link>//localhost:1313/posts/contourner-le-ssl-pinning-sur-android/</link>
      <pubDate>Thu, 04 Nov 2021 12:00:00 +0000</pubDate>
      <guid>//localhost:1313/posts/contourner-le-ssl-pinning-sur-android/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;Pour un projet personnel, j&amp;rsquo;ai dû récupérer une requête provenant d&amp;rsquo;une application de mon téléphone. Après de nombreuses recherches j&amp;rsquo;ai trouvé comment faire et j&amp;rsquo;ai compris toutes les méthodes pour y parvenir.&#xA;La principale difficulté pour récupérer le traffic réseau de votre téléphone est de déchiffrer les requêtes https.&lt;/p&gt;&#xA;&lt;h3 id=&#34;https--cest-quoi-&#34;&gt;Http&lt;strong&gt;S&lt;/strong&gt; , c&amp;rsquo;est quoi ?&lt;/h3&gt;&#xA;&lt;p&gt;&amp;ldquo;HyperText Transfer Protocol Secure&amp;rdquo; est un Protocol qui succède à l&amp;rsquo;http . En effet il reprend l&amp;rsquo;http en y rajoutant une couche de chiffrement comme SSL ou TLS .&#xA;&lt;code&gt;Un certificat&lt;/code&gt; assure l&amp;rsquo;intégrité de la destination et empêche à un Tier de se plaçant entre votre machine et votre site web pour contrôler votre requête web .&lt;/p&gt;</description>
    </item>
    <item>
      <title>I want to break free 1/2 | KillerQueen 2021 | Catégorie Pwn</title>
      <link>//localhost:1313/writeups/python-jail-killerqueenctf-2021/</link>
      <pubDate>Mon, 01 Nov 2021 12:00:00 +0000</pubDate>
      <guid>//localhost:1313/writeups/python-jail-killerqueenctf-2021/</guid>
      <description>&lt;h1 id=&#34;i-want-to-break-free-12--killerqueen-2021&#34;&gt;I want to break free 1/2 | KillerQueen 2021&lt;/h1&gt;&#xA;&lt;h2 id=&#34;fichiers&#34;&gt;Fichier(s)&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;./files/jail.py&#34;&gt;Jail&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;./files/blacklist.txt&#34;&gt;blacklist.txt&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;necessaires&#34;&gt;Necessaires&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Netcat&lt;/li&gt;&#xA;&lt;li&gt;Python3&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;flag&#34;&gt;Flag&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;kqctf{0h_h0w_1_w4n7_70_br34k_fr33_2398d89vj3nsoicifh3bdoq1b39049v}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;solution-détaillée&#34;&gt;Solution détaillée&lt;/h2&gt;&#xA;&lt;p&gt;Le but du challenge est d&amp;rsquo;escape la jail python pour afficher le contenu d&amp;rsquo;un Fichier txt et d&amp;rsquo;avoir le flag.&lt;/p&gt;&#xA;&lt;h4 id=&#34;analyse-de-jailpy&#34;&gt;Analyse de Jail.py&lt;/h4&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Python&#34; data-lang=&#34;Python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/usr/bin/env python3&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;server&lt;/span&gt;():&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    message &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    You are in jail. Can you escape?&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print(message)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; input(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;gt; &amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            safe &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; char &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; data:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; (ord(char)&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;33&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; ord(char)&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;126&lt;/span&gt;):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    safe &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;False&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;with&lt;/span&gt; open(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;blacklist.txt&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;r&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; f:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                badwords &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; f&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;readlines()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; badword &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; badwords:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; badword &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; data &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; data &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; badword:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    safe &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;False&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; safe:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                print(exec(data))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;You used a bad word!&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Exception&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; e:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            print(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Something went wrong.&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            print(e)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            exit()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; __name__ &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;__main__&amp;#34;&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    server()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Comment utiliser l&#39;OCR pour résoudre des captchas</title>
      <link>//localhost:1313/posts/les-captchas-sont-inutiles-part3/</link>
      <pubDate>Fri, 29 Oct 2021 08:00:00 +0000</pubDate>
      <guid>//localhost:1313/posts/les-captchas-sont-inutiles-part3/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;Dans des articles précédent, nous avons vu comment bypass 2 types de catpcha .&#xA;Nous allons voir comment bypass d&amp;rsquo;une autre manière ces captchas grâce à l&amp;rsquo;OCR&lt;/p&gt;&#xA;&lt;h1 id=&#34;hcaptha&#34;&gt;HCaptha&lt;/h1&gt;&#xA;&lt;p&gt;Hcaptcha est un concurrent à google de plus en plus connu :&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;./img/hcaptcha.png&#34; alt=&#34;Alt text&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Il existe deux manières de le contourner :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Avec un script JS&lt;/li&gt;&#xA;&lt;li&gt;Avec ce lien : &lt;a href=&#34;https://dashboard.hcaptcha.com/signup?type=accessibility&#34; target=&#34;_blank&#34;&gt;https://dashboard.hcaptcha.com/signup?type=accessibility&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;En effet , on peut recevoir un cookie par mail qui bypass tous les captcha !&lt;/p&gt;</description>
    </item>
    <item>
      <title>Comment Isoler un Recaptcha</title>
      <link>//localhost:1313/posts/les-captchas-sont-inutiles-part2/</link>
      <pubDate>Thu, 28 Oct 2021 12:00:00 +0000</pubDate>
      <guid>//localhost:1313/posts/les-captchas-sont-inutiles-part2/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;Nous avons vu dans un précédent comment bypass les reCAPTCHA Silencieux, ceux en arrière-plan.&#xA;Mais comment faire quand ces captchas nécessitent une interaction humaine ?&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;./img/robot.png&#34; alt=&#34;Alt text&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;le-problème&#34;&gt;Le problème&lt;/h2&gt;&#xA;&lt;p&gt;Dans un captcha silencieux, il n&amp;rsquo;y pas d&amp;rsquo;interactions entre l&amp;rsquo;utilisateur et le captcha. On peut donc le contourner en simulant des actions identiques au script natif.&#xA;En revanche dans un captcha visible, les choses changent &amp;hellip;&lt;br&gt;&#xA;Le payload généré et envoyé dépend des images cliquées. On ne peut donc pas générer une template de post-data comme précédemment. (Voir &lt;a href=&#34;http://vozec.fr/articles/les-captchas-sont-inutiles-part1&#34; target=&#34;_blank&#34;&gt;ici&lt;/a&gt;)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Comment Bypass un Silent Recaptcha V3</title>
      <link>//localhost:1313/posts/les-captchas-sont-inutiles-part1/</link>
      <pubDate>Wed, 27 Oct 2021 12:00:00 +0000</pubDate>
      <guid>//localhost:1313/posts/les-captchas-sont-inutiles-part1/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;Les Captchas sont des petits programmes web qui servent à déterminer si leur interlocuteur est un humain ou un robot. Ce n&amp;rsquo;est généralement pas dérangeant pour les gens normaux mais cela devient ennuyeux pour les développeur qui souhaitent faire du scraping web ou juste se connecter à un service depuis le site-Web.&#xA;Dans cet article nous allons nous concentrer sur les recaptchas de google et particulièrement ceux en mode &lt;strong&gt;Silent&lt;/strong&gt; en version 2&lt;/p&gt;</description>
    </item>
    <item>
      <title>Comment casser un mot de passe Wifi</title>
      <link>//localhost:1313/posts/pourquoi-votre-wifi-est-vuln%C3%A9rable/</link>
      <pubDate>Tue, 26 Oct 2021 12:00:00 +0000</pubDate>
      <guid>//localhost:1313/posts/pourquoi-votre-wifi-est-vuln%C3%A9rable/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;La sécurité WPA2 (&lt;em&gt;Wi-Fi Protected Access Version 2&lt;/em&gt;) est la sécurité la plus courante sur votre box internet.&#xA;Il est pris en charge depuis 2005 sur Windows XP et il est encore utilisé de nos jours.&#xA;WPA2 reprend la technologie WPA en y rajoutant la &lt;a href=&#34;https://fr.wikipedia.org/wiki/IEEE_802.11&#34; target=&#34;_blank&#34;&gt;norme 802.11&lt;/a&gt; qui assure la prise en charge de nouveaux protocols (&lt;em&gt;ex:CCMP&lt;/em&gt;) et qui améliore la sécurité de celui-ci ( &lt;a href=&#34;https://fr.wikipedia.org/wiki/Advanced_Encryption_Standard&#34; target=&#34;_blank&#34;&gt;&lt;em&gt;AES&lt;/em&gt;&lt;/a&gt; ).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pourquoi il faut sécuriser vos DLL P1</title>
      <link>//localhost:1313/posts/pourquoi-vous-devez-securiser-vos-dll/</link>
      <pubDate>Mon, 25 Oct 2021 12:00:00 +0000</pubDate>
      <guid>//localhost:1313/posts/pourquoi-vous-devez-securiser-vos-dll/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;Une DLL (Dynamic Link Library) est une bibliothèque logicielle qui permet le partage, par des programmes, de codes.&#xA;Pour résumer, c&amp;rsquo;est une bibliothèque avec plusieurs fonctions à l&amp;rsquo;intérieur. C&amp;rsquo;est très utile pour ne pas toujours coder la même chose.&#xA;On code une fois la DLL et on a plus qu&amp;rsquo;a appelé ses fonctions dans tous ses projets.&#xA;L&amp;rsquo;avantage du C# est qu&amp;rsquo;il existe un grand nombre de bibliothèques, et la plupart sont Open-Source, sur GitHub principalement&lt;/p&gt;</description>
    </item>
    <item>
      <title>Comment Reverse du .Net facilement</title>
      <link>//localhost:1313/posts/comment-reverse-du-.net-facilement/</link>
      <pubDate>Sun, 24 Oct 2021 12:00:00 +0000</pubDate>
      <guid>//localhost:1313/posts/comment-reverse-du-.net-facilement/</guid>
      <description>&lt;h2 id=&#34;--created-by-vozec-23102021&#34;&gt;&#xA;&#xD;&#xA;&lt;script src=&#34;https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script&gt;&#xD;&#xA;$(document).ready(function() {&#xD;&#xA;    var ctrlDown = false,&#xD;&#xA;        ctrlKey = 17,&#xD;&#xA;        cmdKey = 91,&#xD;&#xA;        vKey = 86,&#xD;&#xA;        cKey = 67;&#xD;&#xA;&#xD;&#xA;    $(document).keydown(function(e) {&#xD;&#xA;        if (e.keyCode == ctrlKey || e.keyCode == cmdKey) ctrlDown = true;&#xD;&#xA;    }).keyup(function(e) {&#xD;&#xA;        if (e.keyCode == ctrlKey || e.keyCode == cmdKey) ctrlDown = false;&#xD;&#xA;    });&#xD;&#xA;    $(document).keydown(function(e) {&#xD;&#xA;        if (ctrlDown &amp;&amp; (e.keyCode == cKey)) window.location.href = &#34;https://www.youtube.com/watch?v=cvh0nX08nRw&#34;;&#xD;&#xA;        if (ctrlDown &amp;&amp; (e.keyCode == vKey)) window.location.href = &#34;https://www.youtube.com/watch?v=cvh0nX08nRw&#34;;&#xD;&#xA;    });&#xD;&#xA;});&#xD;&#xA;&lt;/script&gt;&#xD;&#xA;&#xA;&#xA;[//]: &amp;lt;&amp;gt; (Created By Vozec 23/10/2021)&lt;/h2&gt;&#xA;&lt;h2 id=&#34;nécessaires&#34;&gt;Nécessaires&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;./files/DotNetPack.rar&#34;&gt;Ce pack complet pour l&amp;rsquo;obfuscation C#&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;.Net est un langage assez facile à reverse en général. Grâce à de simples outils comme JetBrain Dotpeek , DnSpy ou Ilspy , on peut facilement débugger , éditer , patcher un assembly sans soucis .&#xA;La principale difficulté et la multitude de protection qui existe autour du Framework de Microsoft (.Net Framework/Core).&#xA;Nous allons donc voir quelles sont les principales sécurités et comment les contourner.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Writeup Unknown 2 | GrabCon 2021 | Catégorie reverse</title>
      <link>//localhost:1313/writeups/unknown2-grabcon-ctf-2021/</link>
      <pubDate>Sun, 17 Oct 2021 12:00:00 +0000</pubDate>
      <guid>//localhost:1313/writeups/unknown2-grabcon-ctf-2021/</guid>
      <description>&lt;h1 id=&#34;unknown-2--grabcon-ctf-2021&#34;&gt;Unknown 2 | GrabCon CTF 2021&lt;/h1&gt;&#xA;&lt;h2 id=&#34;fichiers&#34;&gt;Fichier(s)&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;./files/med_re_2&#34;&gt;Unknow_2&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;nécessaires&#34;&gt;Nécessaires&lt;/h2&gt;&#xA;&lt;p&gt;Ghidra + Kali&lt;/p&gt;&#xA;&lt;h2 id=&#34;flag&#34;&gt;Flag&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;GrabCON{626C61636B647261676F6E}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;solution-détaillée&#34;&gt;Solution détaillée&lt;/h2&gt;&#xA;&lt;p&gt;La première chose que j’ai fait et de faire un &lt;code&gt;ltrace&lt;/code&gt; mais cela n’a rien donné&lt;/p&gt;&#xA;&lt;p&gt;J’ai donc fait : &lt;code&gt;strings med_re_2&lt;/code&gt; et en cherchant un petit peu j’ai trouvé ceci :&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;./img/strings.png&#34; alt=&#34;Alt text&#34; title=&#34;strings&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Si vous ne connaissez pas,&lt;strong&gt;UPX&lt;/strong&gt; est un packer qui ici compresse le binaire . Nativement, le fichier ne peut pas être analysé avec ghidra .&lt;/p&gt;</description>
    </item>
    <item>
      <title>Homepage</title>
      <link>//localhost:1313/about/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/about/about/</guid>
      <description>&lt;h1 id=&#34;hello-&#34;&gt;Hello 👋&lt;/h1&gt;&#xA;&lt;p&gt;&lt;strong&gt;Welcome to my personal website !&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;My name is &lt;em&gt;Arthur&lt;/em&gt;, better known under the nickname &lt;code&gt;Vozec&lt;/code&gt; and I am passionate about computer science, more precisely about &lt;em&gt;cybersecurity&lt;/em&gt;. I learn new things in autodidacts in parallel to my post-baccalaureate studies and this GitHub contains many projects that I did by myself. I participate to many &lt;strong&gt;CTF&lt;/strong&gt; and many of the new tools I create allow me to save time during these competitions.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
